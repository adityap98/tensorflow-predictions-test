{
  "_args": [
    [
      {
        "raw": "tensorflow/tfjs",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "tensorflow/tfjs",
        "spec": "github:tensorflow/tfjs",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:tensorflow/tfjs.git",
          "sshUrl": "git+ssh://git@github.com/tensorflow/tfjs.git",
          "httpsUrl": "git+https://github.com/tensorflow/tfjs.git",
          "gitUrl": "git://github.com/tensorflow/tfjs.git",
          "shortcut": "github:tensorflow/tfjs",
          "directUrl": "https://raw.githubusercontent.com/tensorflow/tfjs/master/package.json"
        }
      },
      "/Users/Aditya/Desktop/tensorflow-predictions-test"
    ]
  ],
  "_from": "tensorflow/tfjs",
  "_id": "@tensorflow/tfjs@1.2.1",
  "_inCache": true,
  "_location": "/@tensorflow/tfjs",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tensorflow/tfjs",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "tensorflow/tfjs",
    "spec": "github:tensorflow/tfjs",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:tensorflow/tfjs.git",
      "sshUrl": "git+ssh://git@github.com/tensorflow/tfjs.git",
      "httpsUrl": "git+https://github.com/tensorflow/tfjs.git",
      "gitUrl": "git://github.com/tensorflow/tfjs.git",
      "shortcut": "github:tensorflow/tfjs",
      "directUrl": "https://raw.githubusercontent.com/tensorflow/tfjs/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git://github.com/tensorflow/tfjs.git#f3373db4c774df9115103efde59ee62e972f03b0",
  "_shasum": "8f19a96e24c0e6a768d72bf582be548eed69272d",
  "_shrinkwrap": null,
  "_spec": "tensorflow/tfjs",
  "_where": "/Users/Aditya/Desktop/tensorflow-predictions-test",
  "bugs": {
    "url": "https://github.com/tensorflow/tfjs/issues"
  },
  "dependencies": {
    "@tensorflow/tfjs-converter": "1.2.1",
    "@tensorflow/tfjs-core": "1.2.1",
    "@tensorflow/tfjs-data": "1.2.1",
    "@tensorflow/tfjs-layers": "1.2.1"
  },
  "description": "An open-source machine learning framework.",
  "devDependencies": {
    "@octokit/rest": "15.2.6",
    "@types/jasmine": "2.8.7",
    "@types/mkdirp": "^0.5.2",
    "@types/node": "~9.6.1",
    "@types/shelljs": "^0.8.4",
    "babel-core": "~6.26.3",
    "chalk": "~2.4.2",
    "clang-format": "~1.2.2",
    "commander": "~2.14.1",
    "jasmine": "3.1.0",
    "jasmine-core": "~3.1.0",
    "karma": "~4.0.1",
    "karma-browserstack-launcher": "~1.4.0",
    "karma-chrome-launcher": "~2.2.0",
    "karma-firefox-launcher": "~1.1.0",
    "karma-jasmine": "~1.1.1",
    "karma-typescript": "~4.0.0",
    "mkdirp": "~0.5.1",
    "npm-run-all": "~4.1.3",
    "rimraf": "~2.6.2",
    "rollup": "~0.58.2",
    "rollup-plugin-babel": "~3.0.4",
    "rollup-plugin-commonjs": "9.1.3",
    "rollup-plugin-json": "~3.0.0",
    "rollup-plugin-node-resolve": "3.3.0",
    "rollup-plugin-sourcemaps": "^0.4.2",
    "rollup-plugin-typescript2": "0.13.0",
    "rollup-plugin-uglify": "~3.0.0",
    "shelljs": "~0.8.1",
    "ts-node": "~4.1.0",
    "tslint": "~5.9.1",
    "typescript": "3.3.3333",
    "yalc": "~1.0.0-pre.21"
  },
  "gitHead": "f3373db4c774df9115103efde59ee62e972f03b0",
  "homepage": "https://github.com/tensorflow/tfjs#readme",
  "jsdelivr": "dist/tf.min.js",
  "jsnext:main": "dist/tf.esm.js",
  "license": "Apache-2.0",
  "main": "dist/index",
  "module": "dist/tf.esm.js",
  "name": "@tensorflow/tfjs",
  "optionalDependencies": {},
  "private": false,
  "readme": "# TensorFlow.js\n\nTensorFlow.js is an open-source hardware-accelerated JavaScript library for\ntraining and deploying machine learning models.\n\n**Develop ML in the Browser** <br/>\nUse flexible and intuitive APIs to build models from scratch using the low-level\nJavaScript linear algebra library or the high-level layers API.\n\n**Develop ML in Node.js** <br/>\nExecute native TensorFlow with the same TensorFlow.js API under the Node.js\nruntime.\n\n**Run Existing models** <br/>\nUse TensorFlow.js model converters to run pre-existing TensorFlow models right\nin the browser.\n\n**Retrain Existing models** <br/>\nRetrain pre-existing ML models using sensor data connected to the browser, or\nother client-side data.\n\n## About this repo\n\nThis repository contains the logic and scripts that combine\nfour packages:\n- [TensorFlow.js Core](https://github.com/tensorflow/tfjs-core),\n  a flexible low-level API, formerly known as *deeplearn.js*.\n- [TensorFlow.js Layers](https://github.com/tensorflow/tfjs-layers),\n  a high-level API which implements functionality similar to\n  [Keras](https://keras.io/).\n- [TensorFlow.js Data](https://github.com/tensorflow/tfjs-data),\n  a simple API to load and prepare data analogous to\n  [tf.data](https://www.tensorflow.org/guide/datasets).\n- [TensorFlow.js Converter](https://github.com/tensorflow/tfjs-converter),\n  tools to import a TensorFlow SavedModel to TensorFlow.js\n\nIf you care about bundle size, you can import those packages individually.\n\nIf you are looking for Node.js support, check out the [TensorFlow.js Node repository](https://github.com/tensorflow/tfjs-node).\n\n## Examples\n\nCheck out our\n[examples repository](https://github.com/tensorflow/tfjs-examples)\nand our [tutorials](https://js.tensorflow.org/tutorials/).\n\n## Gallery\n\nBe sure to check out [the gallery](GALLERY.md) of all projects related to TensorFlow.js.\n\n## Pre-trained models\n\nBe sure to also check out our [models repository](https://github.com/tensorflow/tfjs-models) where we host pretrained models\non NPM.\n\n## Getting started\n\nThere are two main ways to get TensorFlow.js in your JavaScript project:\nvia <a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_JavaScript_within_a_webpage\" target=\"_blank\">script tags</a> <strong>or</strong> by installing it from <a href=\"https://www.npmjs.com/\" target=\"_blank\">NPM</a>\nand using a build tool like <a href=\"https://parceljs.org/\" target=\"_blank\">Parcel</a>,\n<a href=\"https://webpack.js.org/\" target=\"_blank\">WebPack</a>, or <a href=\"https://rollupjs.org/guide/en\" target=\"_blank\">Rollup</a>.\n\n### via Script Tag\n\nAdd the following code to an HTML file:\n\n```html\n<html>\n  <head>\n    <!-- Load TensorFlow.js -->\n    <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs/dist/tf.min.js\"> </script>\n\n\n    <!-- Place your code in the script tag below. You can also use an external .js file -->\n    <script>\n      // Notice there is no 'import' statement. 'tf' is available on the index-page\n      // because of the script tag above.\n\n      // Define a model for linear regression.\n      const model = tf.sequential();\n      model.add(tf.layers.dense({units: 1, inputShape: [1]}));\n\n      // Prepare the model for training: Specify the loss and the optimizer.\n      model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n\n      // Generate some synthetic data for training.\n      const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);\n      const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);\n\n      // Train the model using the data.\n      model.fit(xs, ys).then(() => {\n        // Use the model to do inference on a data point the model hasn't seen before:\n        // Open the browser devtools to see the output\n        model.predict(tf.tensor2d([5], [1, 1])).print();\n      });\n    </script>\n  </head>\n\n  <body>\n  </body>\n</html>\n```\n\nOpen up that html file in your browser and the code should run!\n\n### via NPM\n\nAdd TensorFlow.js to your project using <a href=\"https://yarnpkg.com/en/\" target=\"_blank\">yarn</a> <em>or</em> <a href=\"https://docs.npmjs.com/cli/npm\" target=\"_blank\">npm</a>. <b>Note:</b> Because\nwe use ES2017 syntax (such as `import`), this workflow assumes you are using a modern browser or a bundler/transpiler\nto convert your code to something older browsers understand. See our\n<a href='https://github.com/tensorflow/tfjs-examples' target=\"_blank\">examples</a>\nto see how we use <a href=\"https://parceljs.org/\" target=\"_blank\">Parcel</a> to build\nour code. However you are free to use any build tool that you prefer.\n\n\n\n```js\nimport * as tf from '@tensorflow/tfjs';\n\n// Define a model for linear regression.\nconst model = tf.sequential();\nmodel.add(tf.layers.dense({units: 1, inputShape: [1]}));\n\n// Prepare the model for training: Specify the loss and the optimizer.\nmodel.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n\n// Generate some synthetic data for training.\nconst xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);\nconst ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);\n\n// Train the model using the data.\nmodel.fit(xs, ys).then(() => {\n  // Use the model to do inference on a data point the model hasn't seen before:\n  model.predict(tf.tensor2d([5], [1, 1])).print();\n});\n```\n\nSee our <a href=\"https://js.tensorflow.org/tutorials/\" target=\"_blank\">tutorials</a>, <a href=\"https://github.com/tensorflow/tfjs-examples\" target=\"_blank\">examples</a>\nand <a href=\"https://js.tensorflow.org/api/latest/\">documentation</a> for more details.\n\n## Importing pre-trained models\n\nWe support porting pre-trained models from:\n- [TensorFlow SavedModel](https://github.com/tensorflow/tfjs-converter)\n- [Keras](https://js.tensorflow.org/tutorials/import-keras.html)\n\n## Find out more\n\n[TensorFlow.js](https://js.tensorflow.org) is a part of the\n[TensorFlow](https://www.tensorflow.org) ecosystem. For more info:\n- For help from the community, use [`tensorflow.js`](https://stackoverflow.com/questions/tagged/tensorflow.js) tag on Stack Overflow.\n- [js.tensorflow.org](https://js.tensorflow.org)\n- [Tutorials](https://js.tensorflow.org/tutorials)\n- [API reference](https://js.tensorflow.org/api/latest/)\n- [Discussion mailing list](https://groups.google.com/a/tensorflow.org/forum/#!forum/tfjs)\n\nThanks <a href=\"https://www.browserstack.com/\">BrowserStack</a> for providing testing support.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tensorflow/tfjs.git"
  },
  "scripts": {
    "build": "tsc",
    "build-npm": "./scripts/build-npm.sh",
    "link-local": "yalc link",
    "lint": "tslint -p . -t verbose",
    "publish-local": "yarn build-npm && yalc push",
    "release": "ts-node ./scripts/release.ts",
    "release-notes": "ts-node ./scripts/release_notes/release_notes.ts",
    "test": "ts-node ./scripts/release_notes/run_tests.ts && karma start",
    "test-ci": "./scripts/test-ci.sh"
  },
  "types": "dist/index.d.ts",
  "unpkg": "dist/tf.min.js",
  "version": "1.2.1"
}
